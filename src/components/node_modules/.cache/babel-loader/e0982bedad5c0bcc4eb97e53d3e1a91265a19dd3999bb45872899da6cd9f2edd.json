{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Caro\\\\adivinaquien\\\\src\\\\components\\\\question.js\";\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Question() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n      style: {\n        backgroundColor: 'white',\n        textAlign: 'center',\n        hi: '10px'\n      },\n      children: \"\\xBFTu personaje es ficticio?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outline-warning\",\n      children: \"\\u3024\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outline-warning\",\n      children: \"\\u2713\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = Question;\nexport default Question;\nvar _c;\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"names":["Button","Card","jsxDEV","_jsxDEV","Fragment","_Fragment","Question","children","Body","style","backgroundColor","textAlign","hi","fileName","_jsxFileName","lineNumber","columnNumber","variant","_c","$RefreshReg$"],"sources":["C:/Users/Caro/adivinaquien/src/components/question.js"],"sourcesContent":["import Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nfunction Question() {\r\n  return (   \r\n    <>\r\n      <Card.Body style={{backgroundColor:'white', textAlign:'center', hi:'10px'}}>¿Tu personaje es ficticio?</Card.Body>\r\n      <Button variant=\"outline-warning\">〤</Button>\r\n      <Button variant=\"outline-warning\">✓</Button>\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Question;\r\n\r\n"],"mappings":";AAAA,OAAOA,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,IAAI,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExC,SAASC,QAAQA,CAAA,EAAG;EAClB,oBACEH,OAAA,CAAAE,SAAA;IAAAE,QAAA,gBACEJ,OAAA,CAACF,IAAI,CAACO,IAAI;MAACC,KAAK,EAAE;QAACC,eAAe,EAAC,OAAO;QAAEC,SAAS,EAAC,QAAQ;QAAEC,EAAE,EAAC;MAAM,CAAE;MAAAL,QAAA,EAAC;IAA0B;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAW,CAAC,eAClHb,OAAA,CAACH,MAAM;MAACiB,OAAO,EAAC,iBAAiB;MAAAV,QAAA,EAAC;IAAC;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC5Cb,OAAA,CAACH,MAAM;MAACiB,OAAO,EAAC,iBAAiB;MAAAV,QAAA,EAAC;IAAC;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eAE5C,CAAC;AAEP;AAACE,EAAA,GATQZ,QAAQ;AAWjB,eAAeA,QAAQ;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}